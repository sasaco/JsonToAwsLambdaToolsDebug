{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","str1","str2","replace","str3","str4","JSON","stringify","body","out","onClickMe","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public in: string\n  public out: string\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onClickMe() {\n\n    const str1: string = this.in;\n\n\n    const str2: string = str1.replace(/\\n/g, '');\n    const str3: string = str2.replace(/ /g, '');\n    const str4: string = JSON.stringify( { body: str3 } );\n\n    this.out = str4;\n  }\n\n}\n","\n <div class=\"container\">\n\n  <h1>JSON 形式を AWS Lambda Tool のデバッグで用いる形式に変換する</h1>\n\n  <div>\n    <label>JSON</label>\n    <div>\n      <textarea [(ngModel)]=\"in\" id=\"json_in\"></textarea>\n      <!-- <input placeholder=\"JSON\" type=\"text\" [(ngModel)]=\"in\" id=\"json_in\">  -->\n    </div>\n  </div>\n\n  <div>\n    <button (click)=\"onClickMe()\">Submit</button>\n  </div>\n\n  <div>\n    <label>AWS Lambda Tool のデバッグで用いる形式</label>\n    <div>\n      <textarea [(ngModel)]=\"out\" id=\"json_out\"></textarea>\n    </div>\n  </div>\n\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule }   from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatSliderModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}