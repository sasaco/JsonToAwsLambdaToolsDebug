{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IAKvB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,SAAS;QAEP,MAAM,IAAI,GAAW,IAAI,CAAC,EAAE,CAAC;QAG7B,MAAM,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7C,MAAM,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAW,IAAI,CAAC,SAAS,CAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAE,CAAC;QAEtD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IAClB,CAAC;;wEApBU,YAAY;4FAAZ,YAAY;QCNxB,yEAEC;QAAA,qEAAI;QAAA,mMAAyC;QAAA,4DAAK;QAElD,sEACE;QAAA,wEAAO;QAAA,+DAAI;QAAA,4DAAQ;QACnB,sEACE;QAAA,8EAAmD;QAAzC,+KAAgB;QAAc,4DAAW;QAErD,4DAAM;QACR,4DAAM;QAEN,sEACE;QAAA,4EAA8B;QAAtB,oIAAS,eAAW,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC/C,4DAAM;QAEN,uEACE;QAAA,yEAAO;QAAA,8IAA2B;QAAA,4DAAQ;QAC1C,uEACE;QAAA,+EAAqD;QAA3C,iLAAiB;QAAe,4DAAW;QACvD,4DAAM;QACR,4DAAM;QAER,4DAAM;;QAhBU,0DAAgB;QAAhB,2EAAgB;QAYhB,0DAAiB;QAAjB,4EAAiB;;6FDbpB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACgC;AACpB;AACZ;;AAexC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,4FAAuB;YACvB,0DAAW;YACX,wEAAe;SAChB;mIAIU,SAAS,mBAXlB,2DAAY,aAGZ,uEAAa;QACb,4FAAuB;QACvB,0DAAW;QACX,wEAAe;6FAKN,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,0DAAW;oBACX,wEAAe;iBAChB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public in: string\n  public out: string\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onClickMe() {\n\n    const str1: string = this.in;\n\n\n    const str2: string = str1.replace(/\\n/g, '');\n    const str3: string = str2.replace(/ /g, '');\n    const str4: string = JSON.stringify( { body: str3 } );\n\n    this.out = str4;\n  }\n\n}\n","\n <div class=\"container\">\n\n  <h1>JSON 形式を AWS Lambda Tool のデバッグで用いる形式に変換する</h1>\n\n  <div>\n    <label>JSON</label>\n    <div>\n      <textarea [(ngModel)]=\"in\" id=\"json_in\"></textarea>\n      <!-- <input placeholder=\"JSON\" type=\"text\" [(ngModel)]=\"in\" id=\"json_in\">  -->\n    </div>\n  </div>\n\n  <div>\n    <button (click)=\"onClickMe()\">Submit</button>\n  </div>\n\n  <div>\n    <label>AWS Lambda Tool のデバッグで用いる形式</label>\n    <div>\n      <textarea [(ngModel)]=\"out\" id=\"json_out\"></textarea>\n    </div>\n  </div>\n\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule }   from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatSliderModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}